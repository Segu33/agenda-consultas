extends ../layout

block content
  .container-fluid.mt-5.px-5
    h2.text-center.mb-4 Lista de Pacientes

    // Botones principales
    a.btn.btn-primary.mb-3.me-2(href="/pacientes/agregar") ü©∫ Agregar Paciente
    a.btn.btn-secondary.mb-3(href="/") ‚¨Ö Volver al Inicio

    // üîç Buscador por DNI con autocompletar
    form.mb-4
      .input-group
        input#busquedaDni.form-control(type="text" placeholder="Buscar paciente por DNI..." autocomplete="off")
        button.btn.btn-outline-secondary(type="button" onclick="buscarPacienteSeleccionado()") Buscar

    ul#resultadosBusqueda.list-group.mb-4(style="max-height: 200px; overflow-y: auto;")

    // Tabla de pacientes
    if pacientes.length
      table.table.table-striped
        thead
          tr
            th ID
            th Nombre
            th Apellido
            th DNI
            th Email
            th Tel√©fono
            th Obra Social
            th Acciones
        tbody
          each paciente in pacientes
            tr
              td= paciente.id_paciente
              td= paciente.nombre
              td= paciente.apellido
              td= paciente.dni
              td= paciente.email
              td= paciente.telefono
              td= paciente.obra_social
              td
                a.btn.btn-sm.btn-warning(href=`/pacientes/editar/${paciente.id_paciente}`) ‚úèÔ∏è Editar
                form(action=`/pacientes/eliminar/${paciente.id_paciente}`, method='POST', onsubmit="return confirm('¬øEst√°s seguro de eliminar este paciente?')", style="display:inline;")
                  button.btn.btn-sm.btn-danger.ms-2(type='submit')
                    i.fas.fa-trash.me-1
                    | Eliminar
    else
      p.text-center.text-muted.mt-4 No hay pacientes registrados.

  // Scripts para autocompletado y redirecci√≥n seg√∫n turno
  script.
    let pacientesEncontrados = [];

    document.getElementById('busquedaDni').addEventListener('input', async function () {
      const term = this.value.trim();
      const lista = document.getElementById('resultadosBusqueda');
      lista.innerHTML = '';

      if (term.length < 2) return;

      try {
        const res = await fetch(`/pacientes/buscar?term=${encodeURIComponent(term)}`);
        const data = await res.json();
        pacientesEncontrados = data;

        data.forEach(p => {
          const li = document.createElement('li');
          li.classList.add('list-group-item', 'list-group-item-action');

          let texto = `${p.nombre} ${p.apellido} - DNI: ${p.dni}`;
          texto += p.tieneTurno ? ' ‚úÖ Tiene turno' : ' ‚ùå Sin turno';

          li.textContent = texto;
          li.dataset.id = p.id_paciente;

          li.addEventListener('click', () => {
            if (p.tieneTurno && p.id_turno) {
              window.location.href = `/turnos/${p.id_turno}`;
            } else {
              window.location.href = `/pacientes/editar/${p.id_paciente}`;
            }
          });

          lista.appendChild(li);
        });
      } catch (error) {
        console.error('Error en b√∫squeda por DNI:', error);
      }
    });

    function buscarPacienteSeleccionado() {
      const input = document.getElementById('busquedaDni').value.trim();
      const seleccionado = pacientesEncontrados.find(p =>
        `${p.nombre} ${p.apellido} - DNI: ${p.dni}`.toLowerCase().includes(input.toLowerCase())
      );
      if (seleccionado) {
        if (seleccionado.tieneTurno && seleccionado.id_turno) {
          window.location.href = `/turnos/${seleccionado.id_turno}`;
        } else {
          window.location.href = `/pacientes/editar/${seleccionado.id_paciente}`;
        }
      } else {
        alert('Paciente no encontrado o ingrese un DNI v√°lido.');
      }
    }
